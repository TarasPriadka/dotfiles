# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
#

# Save up to 50000 entries in history file
# SAVEHIST=50000
# # Keep 50000 lines of history within the shell
# HISTSIZE=50000
#
# # Add timestamps to history
# setopt EXTENDED_HISTORY
# # Append history to the history file (rather than overwrite)
# setopt APPEND_HISTORY
# # Add commands as they are typed, not at shell exit
# setopt INC_APPEND_HISTORY
# # Share history across multiple zsh sessions
# setopt SHARE_HISTORY
# # Expire duplicates first
# setopt HIST_EXPIRE_DUPS_FIRST
# # Do not store duplications
# setopt HIST_IGNORE_DUPS
# # Ignore duplicates when searching
# setopt HIST_FIND_NO_DUPS
# # Remove blank lines from history
# setopt HIST_REDUCE_BLANKS


autoload -Uz vcs_info
precmd() { vcs_info }

zstyle ':vcs_info:git:*' formats '%b'
zstyle ':vcs_info:*' enable git

git_prompt_info() {
  [[ -n "$vcs_info_msg_0_" ]] && echo "${vcs_info_msg_0_}" | sed 's/\*$//'
}

PROMPT='%F{blue}(%m)%f %F{green}%~%f %F{yellow}$(git_prompt_info)%f '

#Save up to 50000 entries in history file
SAVEHIST=100000
# Keep 50000 lines of history within the shell
HISTSIZE=100000

# Add timestamps to history
setopt EXTENDED_HISTORY
# Append history to the history file (rather than overwrite)
setopt APPEND_HISTORY
# Add commands as they are typed, not at shell exit
setopt INC_APPEND_HISTORY
# Share history across multiple zsh sessions
setopt SHARE_HISTORY
# Expire duplicates first
setopt HIST_EXPIRE_DUPS_FIRST
# Do not store duplications
setopt HIST_IGNORE_DUPS
# Ignore duplicates when searching
setopt HIST_FIND_NO_DUPS
# Remove blank lines from history
setopt HIST_REDUCE_BLANKS


# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(zsh-autosuggestions web-search copyfile copypath zsh-syntax-highlighting)
# plugins=(git zsh-autosuggestions web-search copyfile copypath zsh-syntax-highlighting)


source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


# unsetopt inc_append_history
# unsetopt share_history

# -------------- SSH Agent startup --------------

SSH_ENV="$HOME/.ssh/agent-environment"

function start_agent {
    echo "Initialising new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    # echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add;
}

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" > /dev/null
    #ps ${SSH_AGENT_PID} doesn't work under cywgin
    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
        start_agent;
    }
else
    start_agent;
fi

# --------------------------------------------------

# -- pyenv --#

export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init - bash)"
eval "$(pyenv virtualenv-init -)"

# -- pyenv --

alias k="kubectl"
alias python="python3"
alias gc="git checkout"
alias gr="git rebase"
alias gb="git branch"
alias gp="git push"
alias claer="clear"

export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
export PATH="$HOME/bin/kubectx:$PATH"
export PATH="$HOME/go/bin:$PATH"
export GPG_TTY=$(tty)
